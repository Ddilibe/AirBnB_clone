#!/usr/bin/python3
"""
    Module used to convert a dictionary to a JSON string
"""
import json

class FileStorage:
    """
    Class That serializes instances to a JSON file and deserializes JSON
    file to the instances

    Private Instances
        __file_path: Contains the string path the json file
        __objects: Dictionary that will store all objects by class name
    """
    __file_path = "file.json"
    __objects = {}

    def all(self):
        """ Public Instance that returns the dictionary __objects """
        return FileStorage.__objects

    def new(self, obj):
        """ Public Instance Method that adds the atribute to the dictionary """
        name = str(obj.__class__) + '.' + str(obj.id)
        self.__objects[name] = obj

    def save(self):
        """
        Public Instance Method thet serializes __objects to thhe JSON path
        """
        try:
            open(self.__file_path, 'r')
        except Exception:
            open(self.__file_path, 'w')
        with open(self.__file_path, 'a') as w:
            json.dumps(self.__objects, w)

    def reload(self):
        """
        Public Instance to deserialize the JSON FILE to __object
        """
        try:
            with open(self.__file_path, 'r') as done:
                dictionary = json.loads(done)
        except Exception:
            pass
